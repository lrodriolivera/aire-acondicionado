version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ac-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ac_management
      POSTGRES_USER: acuser
      POSTGRES_PASSWORD: acpassword123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ac-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ac-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ac-network
    command: redis-server --appendonly yes

  # MQTT Broker (Eclipse Mosquitto)
  mosquitto:
    image: eclipse-mosquitto:2
    container_name: ac-mqtt
    restart: unless-stopped
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./docker/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - mosquitto_data:/mosquitto/data
      - mosquitto_logs:/mosquitto/log
    networks:
      - ac-network

  # Backend API (Node.js)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ac-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://acuser:acpassword123@postgres:5432/ac_management
      REDIS_URL: redis://redis:6379
      MQTT_BROKER_URL: mqtt://mosquitto:1883
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      PORT: 3000
    depends_on:
      - postgres
      - redis
      - mosquitto
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - ac-network
    command: npm run dev

  # Frontend (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ac-frontend
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: http://localhost:3000
      VITE_WS_URL: ws://localhost:3000
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - ac-network
    command: npm run dev

volumes:
  postgres_data:
  redis_data:
  mosquitto_data:
  mosquitto_logs:

networks:
  ac-network:
    driver: bridge
